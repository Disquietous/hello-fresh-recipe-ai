# YOLOv8 Text Detection Training Configuration
# Optimized for recipe text detection tasks

# Dataset configuration
path: ./data/processed  # Dataset root path
train: train/images     # Training images (relative to path)
val: val/images        # Validation images (relative to path)
test: test/images      # Test images (relative to path)

# Text detection classes
nc: 5  # Number of classes
names:
  0: ingredient_line    # Single ingredient lines (e.g., "2 cups flour")
  1: ingredient_block   # Multi-line ingredient sections
  2: instruction_text   # Cooking instructions and method steps
  3: recipe_title      # Recipe names and headings
  4: metadata_text     # Serving size, time, difficulty, etc.

# Training hyperparameters optimized for text detection
batch: 16              # Batch size (-1 for auto)
epochs: 200            # Number of training epochs
patience: 50           # Epochs to wait for improvement before early stopping
save_period: 10        # Save checkpoint every N epochs

# Optimizer settings
optimizer: AdamW       # Optimizer (SGD, Adam, AdamW)
lr0: 0.001            # Initial learning rate
lrf: 0.1              # Final learning rate factor
momentum: 0.937       # Momentum factor for SGD
weight_decay: 0.0005  # Weight decay

# Model architecture
model: yolov8n.pt     # Base model (yolov8n.pt, yolov8s.pt, yolov8m.pt, yolov8l.pt, yolov8x.pt)
device: ''            # Device to run on ('' for auto, 'cpu', '0,1,2,3' for GPU)
workers: 8            # Number of worker threads for data loading
project: runs/text_detection  # Project directory
name: recipe_text_v1  # Experiment name

# Data augmentation (text-specific)
augment: true         # Enable data augmentation
hsv_h: 0.015         # Hue augmentation (fraction)
hsv_s: 0.7           # Saturation augmentation (fraction)
hsv_v: 0.4           # Value augmentation (fraction)
degrees: 5.0         # Rotation augmentation (degrees) - reduced for text
translate: 0.1       # Translation augmentation (fraction)
scale: 0.2           # Scale augmentation (fraction) - reduced for text
shear: 2.0           # Shear augmentation (degrees) - reduced for text
perspective: 0.0001  # Perspective augmentation (fraction) - minimal for text
flipud: 0.0          # Vertical flip probability (0.0 for text)
fliplr: 0.0          # Horizontal flip probability (0.0 for text)
mosaic: 0.8          # Mosaic augmentation probability
mixup: 0.1           # Mixup augmentation probability
copy_paste: 0.0      # Copy-paste augmentation probability

# Image settings
imgsz: 640           # Training image size
cache: true          # Cache images for faster training
rect: false          # Rectangular training
cos_lr: true         # Use cosine learning rate scheduler
close_mosaic: 10     # Disable mosaic augmentation for final epochs

# Validation settings
val: true            # Validate during training
plots: true          # Generate training plots
verbose: true        # Verbose output
save_json: true      # Save results in JSON format
save_hybrid: false   # Save hybrid version (not needed for text detection)
conf: 0.001          # Confidence threshold for predictions
iou: 0.6             # IoU threshold for NMS
max_det: 300         # Maximum detections per image
half: false          # Use half precision (FP16)
dnn: false           # Use OpenCV DNN for ONNX inference

# Text-specific settings
single_cls: false    # Train as single-class dataset
overlap_mask: true   # Use overlap mask for training
mask_ratio: 4        # Mask ratio for training
dropout: 0.0         # Dropout probability
label_smoothing: 0.0 # Label smoothing epsilon

# Loss function weights
box: 7.5             # Box loss weight
cls: 0.5             # Classification loss weight
dfl: 1.5             # Distribution focal loss weight

# Early stopping
patience: 50         # Epochs to wait for improvement
min_delta: 0.001     # Minimum change to qualify as improvement

# Callbacks
callbacks:
  - EarlyStopping
  - ModelCheckpoint
  - ReduceLROnPlateau

# Text detection specific optimizations
text_detection:
  # Anchor optimization for text regions
  anchors: auto      # Auto-optimize anchors for text shapes
  
  # NMS settings for text
  nms_iou: 0.45      # IoU threshold for NMS (lower for text overlap)
  nms_conf: 0.25     # Confidence threshold for NMS
  
  # Text-specific loss weights
  focal_loss_gamma: 2.0    # Focal loss gamma for hard examples
  focal_loss_alpha: 0.25   # Focal loss alpha for class imbalance
  
  # Multi-scale training for text
  multiscale: true         # Enable multi-scale training
  scale_range: [0.5, 1.5]  # Scale range for multi-scale training
  
  # Aspect ratio optimization
  aspect_ratio_range: [0.1, 10.0]  # Aspect ratio range for text regions
  
  # Small object detection (for small text)
  small_object_weight: 2.0  # Weight for small objects
  
  # Text orientation handling
  rotation_augment: true    # Enable rotation augmentation
  rotation_range: [-10, 10] # Rotation range in degrees

# Evaluation metrics
metrics:
  - precision
  - recall
  - mAP50
  - mAP50-95
  - F1-score
  
# Text-specific evaluation
text_metrics:
  - text_precision      # Precision for text regions
  - text_recall        # Recall for text regions  
  - text_f1           # F1 score for text regions
  - ocr_accuracy      # Post-OCR accuracy (if available)
  - end_to_end_accuracy # Complete pipeline accuracy

# Resume training
resume: false        # Resume from last checkpoint
pretrained: true     # Use pretrained weights

# Visualization
visualize: true      # Enable visualization during training
show_labels: true    # Show labels in visualizations
show_conf: true      # Show confidence scores
show_boxes: true     # Show bounding boxes

# Logging
wandb: false         # Use Weights & Biases logging
tensorboard: true    # Use TensorBoard logging
clearml: false       # Use ClearML logging
comet: false         # Use Comet logging

# Export settings (post-training)
export:
  format: [pt, onnx, engine]  # Export formats
  optimize: true              # Optimize for inference
  half: false                 # Use half precision
  dynamic: false              # Dynamic input shapes
  simplify: true              # Simplify ONNX model
  opset: 17                  # ONNX opset version
  workspace: 4               # TensorRT workspace size (GB)
  nms: true                  # Include NMS in export

# Deployment
deploy:
  platform: [cpu, gpu]      # Target platforms
  optimize_inference: true   # Optimize for inference
  batch_size: 1             # Inference batch size
  input_size: [640, 640]    # Input image size
  
# Advanced settings
advanced:
  amp: true                 # Automatic Mixed Precision
  profile: false            # Profile training speed
  deterministic: false      # Deterministic training
  benchmark: true           # Benchmark mode
  
# Multi-language support
multilingual:
  enabled: false            # Enable multi-language training
  languages: [en, es, fr, de, it]  # Supported languages
  language_weights: [1.0, 0.8, 0.8, 0.8, 0.8]  # Language-specific weights
  
# Hardware optimization
hardware:
  gpu_memory_fraction: 0.8  # GPU memory fraction to use
  mixed_precision: true     # Use mixed precision training
  dataloader_workers: 8     # Number of dataloader workers
  pin_memory: true          # Pin memory for faster data transfer